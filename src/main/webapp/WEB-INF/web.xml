<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">

	<display-name>SinoERP</display-name>
	
	<!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔 此参数用于后面的Spring Context Loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:applicationContext*.xml,
			classpath*:spring/applicationContext*.xml
		</param-value>
	</context-param>

	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>smh.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:config/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>
	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
        <listener-class>com.sinobridge.eoss.bpm.listener.InitSpringContextHolder</listener-class>
    </listener>
    	
	<listener>
        <listener-class>com.sinobridge.systemmanage.listener.ConfigInitListener</listener-class>
    </listener>
	<listener>
        <listener-class>com.sinobridge.eoss.bpm.listener.InitSpringContextHolder</listener-class>
    </listener>
	<filter> 
   		<filter-name>OpenSessionInViewFilter</filter-name> 
	    <filter-class> 
	    	org.springframework.orm.hibernate3.support.OpenSessionInViewFilter 
	    </filter-class> 
	    <init-param> 
	    	<param-name>sessionFactoryBeanName</param-name> 
	    	<param-value>sessionFactory</param-value> 
	    </init-param> 
	    <init-param> 
	           <param-name>singleSession</param-name> 
	           <param-value>true</param-value>            
	    </init-param> 
	    <init-param> 
	        <param-name> flushMode </param-name> 
	   		<param-value>AUTO </param-value>         
	    </init-param> 
	</filter> 
	<filter-mapping> 
	   <filter-name>OpenSessionInViewFilter</filter-name> 
	   <url-pattern>/*</url-pattern> 
	</filter-mapping> 

 	<!-- <filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-cleanup</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
   	<!-- Flex BlazeDS 配置 -->
	<listener>
		<listener-class>flex.messaging.HttpFlexSession</listener-class>
	</listener>
	<servlet>
		<servlet-name>MessageBrokerServlet</servlet-name>
		<servlet-class>flex.messaging.MessageBrokerServlet</servlet-class>
		<init-param>
			<param-name>services.configuration.file</param-name>
			<param-value>
				/WEB-INF/conf/flex-services-config.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>MessageBrokerServlet</servlet-name>
		<url-pattern>/messagebroker/*</url-pattern>
	</servlet-mapping>
  	
	<!-- 設定Spring Context的默认Profile -->
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>production</param-value>
	</context-param>

	<!-- Filter 定义 -->
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Open Entity Manager in View filter -->
	<filter>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 页面数据访问过滤器 -->
	<!-- 页面访问过滤器 -->

    <filter>
        <filter-name>loginFilter</filter-name>
        <filter-class>com.sinobridge.systemmanage.filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>loginFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>
	<!-- Spring MVC Servlet -->
	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
</web-app>